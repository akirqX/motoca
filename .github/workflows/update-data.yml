name: 🚀 Update Payment Data

on:
  issues:
    types: [opened, labeled]
    labels: ['data-update']

jobs:
  update-database:
    runs-on: ubuntu-latest

    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🔍 Validate Issue
      id: validate
      run: |
        # Verifica se a issue tem a label correta
        if [[ "${{ github.event.issue.labels.*.name }}" != *"data-update"* ]]; then
          echo "::warning::Issue não tem a label 'data-update'"
          exit 0
        fi

        # Verifica se o corpo contém JSON
        if ! grep -q '```json' <<< "${{ github.event.issue.body }}"; then
          echo "::error::Corpo da issue não contém bloco JSON"
          exit 1
        fi

    - name: 📦 Extract JSON
      id: extract
      run: |
        # Extrai o JSON entre os marcadores
        CONTENT=$(sed -n '/```json/,/```/{/```json/d;/```/d;p;}' <<< "${{ github.event.issue.body }}")
        
        # Valida o JSON
        if ! jq empty <<< "$CONTENT" 2>/dev/null; then
          echo "::error::JSON inválido"
          exit 1
        fi
        
        # Cria o diretório se não existir
        mkdir -p db
        echo "$CONTENT" > db/pagamentos.json
        echo "::notice::JSON extraído com sucesso"

    - name: 💾 Commit Changes
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        git add db/pagamentos.json
        git diff --quiet && git diff --staged --quiet || git commit -m "📌 Atualização via Issue #${{ github.event.issue.number }}"
        git push

    - name: 🔒 Close Issue
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: "✅ Dados atualizados com sucesso!\n\nArquivo atualizado: [pagamentos.json](https://github.com/${{ github.repository }}/blob/main/db/pagamentos.json)"
          })
          
          await github.rest.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            state: 'closed'
          })
